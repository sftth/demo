#!groovy

env.projectid

pipeline {
    agent any

    stages {
        stage('mvn Build') {
            steps {
                echo '========================2. Maven Build ====================='
                sh " chmod +x ./mvnw"
                sh "./mvnw clean package"
            }
        }
        stage('SonarQube analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                    sh './mvnw sonar:sonar'
                }
            }
        }
        stage('SonarQube Quality Gate') {
            steps {
                timeout(time: 30, unit: 'MINUTES') {
                   // waitForQualityGate abortPipeline: true
                   qg = waitForQualityGate() // Reuse taskId previously collected by withSonarQubeEnv
				   if (qg.status != 'OK') {
				       error "Pipeline aborted due to quality gate failure: ${qg.status}"
				   }
                }
            }
        }
    }
    

    post {
        always {
            junit '**/target/surefire-reports/TEST-*.xml'
        }
    }
}